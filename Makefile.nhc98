include Makefile.inc

OBJDIR   = $(BUILDDIR)/$(OBJ)/cpphs
CPPHS    = $(DST)/cpphs$(EXE)
TARGET   = $(CPPHS)

SRCS	= CppIfdef.hs HashDefine.hs MacroPass.hs ParseLib.hs \
	  Position.hs ReadFirst.hs SymTab.hs Tokenise.hs \
	  Cpphs.hs Main.hs

OBJS    = $(patsubst %.hs, $(OBJDIR)/%.$O, $(SRCS))
CFILES    = $(patsubst %.hs, %.$C, $(SRCS))

AUX     = Makefile* README LICENCE* CHANGELOG TODO docs tests

HC = $(LOCAL)nhc98	# can be overridden by caller HC=...
HFLAGS = $(shell echo $(BUILDOPTS)) #-$(CFG)

ifeq "nhc98" "$(findstring nhc98, ${HC})"
HEAP = -H4M -package base
endif
ifeq "ghc" "$(findstring ghc, ${HC})"
HFLAGS += $(shell ${LOCAL}fixghc ${GHCSYM} -package base)
endif

all: $(TARGET)
install: $(TARGET)
cfiles: cleanC $(CFILES)
fromC: $(OBJDIR)
	$(LOCAL)/nhc98 -c -d $(OBJDIR) $(CFILES)
	cd $(OBJDIR); $(LOCAL)nhc98 -H8M -o $(TARGET) *.$O
	$(STRIP) $(TARGET)

clean:
	rm -f $(OBJS)
	rm -f *.hi
cleanC: clean
	rm -f *.hc *.c
realclean: cleanC
	rm -f *.raw *.html haddock.css haskell_icon.gif
	rm -f $(TARGET)
package:
	tar zcvf cpphs.tar.gz $(SRCS) $(AUX)
haddock: $(SRCS)
	haddock -h $(SRCS)


$(CPPHS): $(OBJDIR) $(OBJS)
	$(HC) $(HFLAGS) $(HEAP) -o $@  $(OBJS)
	$(STRIP) $@

$(OBJDIR):
	mkdir -p $(OBJDIR) || $(TRUE)
$(OBJS): $(OBJDIR)/%.$O : %.hs
	$(HC) $(HFLAGS) -c -o $@ $<

$(CFILES): %.$C : %.hs
	$(HC) $(HFLAGS) -C $<


# dependencies generated by hmake -Md:
${OBJDIR}/MacroPass.o:	${OBJDIR}/HashDefine.o ${OBJDIR}/Tokenise.o \
			${OBJDIR}/SymTab.o 
${OBJDIR}/HashDefine.o:
${OBJDIR}/Tokenise.o:	${OBJDIR}/HashDefine.o 
${OBJDIR}/ReadFirst.o:	${OBJDIR}/Position.o ${OBJDIR}/SymTab.o 
${OBJDIR}/Position.o:
${OBJDIR}/ParseLib.o:
${OBJDIR}/SymTab.o:
${OBJDIR}/CppIfdef.o:	${OBJDIR}/SymTab.o ${OBJDIR}/ParseLib.o \
			${OBJDIR}/Position.o ${OBJDIR}/ReadFirst.o \
			${OBJDIR}/Tokenise.o 
${OBJDIR}/Cpphs.o:	${OBJDIR}/CppIfdef.o ${OBJDIR}/Position.o \
			${OBJDIR}/MacroPass.o 
${OBJDIR}/Main.o:	${OBJDIR}/Cpphs.o 

# C-files dependencies.		-- (needs updating)
MacroPass.hc:	HashDefine.hc Tokenise.hc SymTab.hc 
HashDefine.hc:
Tokenise.hc:	HashDefine.hc 
ReadFirst.hc:	Position.hc SymTab.hc 
Position.hc:
ParseLib.hc:
SymTab.hc:
CppIfdef.hc:	SymTab.hc ParseLib.hc Position.hc ReadFirst.hc Tokenise.hc 
Cpphs.hc:	CppIfdef.hc Position.hc MacroPass.hc 
Main.hc:	Cpphs.hc
